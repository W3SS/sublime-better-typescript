{"name":"Sublime Better Typescript","tagline":"Typescript syntax highlighting and checking, commands, shortcuts, snippets, watched compilation and more for Sublime Text.https://github.com/lavrton/sublime-better-typescript","body":"Better Typescript\r\n================================\r\n\r\n# Overview\r\n\r\n**This package is for Sublime Text 3**.\r\n\r\n## Description\r\n\r\nThis is fork of [Better CoffeeScript](https://github.com/aponxi/sublime-better-coffeescript) but adopted for work with Typescript.\r\nAlso look at this TypeScript plugin for Sublime Text https://github.com/Railk/T3S. It is really awesome.\r\n\r\n# Installation\r\n\r\nIf you have Sublime Package Control, you know what to do. If not, well: it's a package manager for Sublime Text 3; it's awesome and you can [read about it here](https://sublime.wbond.net/). Installation guide can be [found here](https://sublime.wbond.net/installation).\r\n\r\n* Open the Command Pallete (`ctrl+shift+P` or `cmd+shift+P`).\r\n* Type \"Install Package\" and hit return.\r\n* Type \"Better TypeScript\" and hit return.\r\n\r\n# Build File Example\r\n\r\nCurrent package don't have sublime build file. You can create it by yourself and save it (`Preferences - Browse Packages... - User folder`) as `Typescript.sublime-build`. Then use `Cmd + B` to build your file.\r\n\r\n```\r\n{\r\n    \"cmd\": [\"tsc\", \"-d\", \"-m\", \"amd\", \"--sourcemap\", \"$file\"],\r\n    \"file_regex\": \"(.*\\\\.ts?)\\\\s\\\\(([0-9]+)\\\\,([0-9]+)\\\\)\\\\:\\\\s(...*?)$\",\r\n    \"selector\": \"source.ts\",\r\n    \"osx\": {\r\n       \"path\": \"/usr/local/bin:/opt/local/bin\"\r\n    },\r\n    \"windows\": {\r\n        \"cmd\": [\"tsc.cmd\", \"-d\", \"-m\", \"amd\", \"--sourcemap\", \"$file\"]\r\n    }\r\n}\r\n```\r\n\r\n# Commands/Shortcuts\r\n\r\nYou can access the commands either using the command palette (`ctrl+shift+P` or `cmd+shift+P`) or via shortcuts.\r\n\r\n\talt+shift+s - Run a syntax check\r\n\talt+shift+c - Compile a file\r\n\talt+shift+d - Display compiled JavaScript\r\n\talt+shift+w - Toggle watch mode\r\n\r\n\r\nContext menu has `Compile Output` that compiles the current TypeScript and outputs the javascript code that is run, in a panel.\r\n\r\n**Note:** Some of the commands use the Status Bar for output, so you'll probably want to enable it (`View Â» Show Status Bar`).\r\n\r\n\r\n# Snippets\r\n\r\n- Use `TAB` to run a snippet after typing the trigger.\r\n- Use `TAB` and `shift+TAB` to cycle forward/backward through fields.\r\n- Use `ESC` to exit snippet mode.\r\n\r\nThanks @MattSeen to provide Snippets (https://github.com/MattSeen/Sublime-TypeScript-Snippets)\r\n\r\n# Settings\r\n\r\nGo to `Preferences > Package Settings > Better TypeScript > Settings - User` to change settings.\r\n\r\nSee `Preferences > Package Settings > Better TypeScript > Settings - Default` to see all available settings.\r\n\r\n\r\n# FAQ\r\n\r\nMost of the linux terminal commands written here can be run via [cygwin](http://cygwin.com/install.html) - aka Linux Terminal in Windows.\r\n\r\n- Most of the problems are related to configurations. Remember to configure `binDir` after you install!\r\n\r\n\r\n- Do I have `tsc` installed?\r\n\r\nTry finding tsc in your global npm list with `npm ls -g | grep tsc` which will output something like:\r\n\r\n```bash\r\nnpm ls -g | grep tsc\r\n```\r\n\r\n\r\n- Where can I find out the path to tsc binary?\r\n\r\nIn Linux `which` command will tell you where a command originates from. In terminal type:\r\n\r\n```bash\r\nwhich tsc\r\n# /usr/bin/tsc\r\n```\r\n\r\nThis path will go into the `binDir` setting.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}